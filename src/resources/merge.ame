def merge(int arr, int l, int m, int r) {
  int i;
  int j;
  int k;

  int n1;
  int n2;

  n1 = m - l +1;
  n2 = r - m;

  int L[100];
  int R[100];
  
  for (i = 0; i < n1; i = i + 1) {
    L[i] = arr[l + i];
  };
  for (j = 0; j < n2; j = j + 1) {
    R[j] = arr[m + 1 + j];
  };

  i = 0;
  j = 0;
  k = l;
  
  for (k = l; k <= r; k = k + 1) {
    if (i < n1) {
      if (j < n2) {
        if (L[i] <= R[j]) {
          arr[k] = L[i];
          i = i + 1;
        } else {
          arr[k] = R[j];
          j = j + 1;
        };
      } else {
        arr[k] = L[i];
        i = i + 1;
      };
    } else {
      if (j < n2) {
        arr[k] = R[j];
        j = j + 1;
      };
    };
  };
}

def mergeSort(int arr, int l, int r) {
  if (l < r) {
    int m;
    m = l + (r - l) / 2;

    int temp;

    temp = call mergeSort(arr, l, m);

    int mmaisum;
    mmaisum = m + 1;

    temp = call mergeSort(arr, mmaisum, r);

    temp = call merge(arr, l, m, r);
  };
}

def printArray(int A, int size) {
  string s;
  s = "Array Ã©: ";
  print s;

  int i;
  for (i = 0; i < size; i = i + 1) {
    print A[i];
    print " ";
  };
  print "\n";
}

def main() {
  int arr[100];
  int arr_size;
  int i;

  arr_size = 100;
  for (i = 0; i < arr_size; i = i + 1) {
    arr[i] = 100 - i;
  };

  print "Dado a array: \n";

  int temp;

  temp = call printArray(arr, arr_size);

  int arr_size_menos_um;
  arr_size_menos_um = arr_size - 1;

  int zero;
  zero = 0;

  temp = call mergeSort(arr, zero, arr_size_menos_um);

  print "\nA array em ordem Ã©: \n";
  temp = call printArray(arr, arr_size);
  print "\n";

  return zero;
}
