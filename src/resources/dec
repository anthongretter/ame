STATEMENT -> VARDECL semicolumn
VARDECL -> int ident DECAUX                             addtype(ident.vallex, int.vallex) (a) (her) ;           VARDECL -> int {a}ident DECAUX{b}
                                                        addmag(indent.vallex, DECAUX.magnitude) (b) (sint)

VARDECL -> float ident DECAUX                           addtype(ident.vallex, float.vallex) (c) (her) ;         VARDECL -> float {c}ident DECAUX{d}
                                                        addmag(indent.vallex, DECAUX.magnitude) (d) (sint)

VARDECL -> string ident DECAUX                          addtype(ident.vallex, string.vallex) (e) (her) ;        VARDECL -> string {e}ident DECAUX{f}
                                                        addmag(indent.vallex, DECAUX.magnitude) (f) (sint)

DECAUX -> lbracket int_constant rbracket DECAUX(1)      DECAUX.magnitude = DECAUX(1).magnitude + 1 (g) (sint) ;  DECAUX -> lbracket int_constant rbracket DECAUX(1){g}

DECAUX -> &                                             DECAUX.magnitude = 0 (h) (sint)                          DECAUX -> &{h}

FUNCDEF -> def ident lparen PARAMLIST rparen lbrace STATELIST rbrace    addtype(ident.vallex, def.vallex) (i) (her) ;   FUNCDEF -> def {i}ident lparen PARAMLIST rparen lbrace STATELIST rbrace
PARAMLIST -> int ident PARAMLISTSUF                                     addtype(ident.vallex, int.vallex) (j) (her)     PARAMLIST -> int {j}ident PARAMLISTSUF
PARAMLIST -> float ident PARAMLISTSUF                                   addtype(ident.vallex, float.vallex) (k) (her)   PARAMLIST -> float {k}ident PARAMLISTSUF
PARAMLIST -> string ident PARAMLISTSUF                                  addtype(ident.vallex, string.vallex) (l) (her)  PARAMLIST -> int {l}ident PARAMLISTSUF